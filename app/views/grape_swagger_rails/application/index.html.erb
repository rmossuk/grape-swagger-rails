<!DOCTYPE html>
<html data-swagger-options="<%= GrapeSwaggerRails.options.to_h.to_json %>">
<head>
  <title><%= GrapeSwaggerRails.options.app_name || 'Swagger UI' %></title>
  <link href='//fonts.googleapis.com/css?family=Droid+Sans:400,700' rel='stylesheet' type='text/css'/>
  <%= stylesheet_link_tag 'grape_swagger_rails/application.css' %>
  <%= javascript_include_tag 'grape_swagger_rails/application.js' %>
  <script type="text/javascript">
	$(function () {
		
	  
	  function getUrlParameter(sParam)
	  {
	      var sPageURL = window.location.search.substring(1);
	      var sURLVariables = sPageURL.split('&');
	      for (var i = 0; i < sURLVariables.length; i++) 
	      {
	          var sParameterName = sURLVariables[i].split('=');
	          if (sParameterName[0] == sParam) 
	          {
	              return sParameterName[1];
	          }
	      }
	  }    
	  
	function replaceParam(key, value){
	  var pathname = window.location.pathname;
	  var params = toParams(window.location.search);
	  params[key] = value;
	
	  return pathname + "?" + jQuery.param(params)
	}
	
	function toParams(searchUrl) {
	  var result = {}
	  if(searchUrl == '')
	    return result;
	
	  var queryString = searchUrl.substr(1);
	
	  var params = queryString.split("&");
	
	  jQuery.each(params, function(index, param){
	    var keyPair = param.split("=");
	
	    var key = keyPair[0];
	    var value = keyPair[1];
	
	    if(result[key] == undefined)
	      result[key] = value
	    else{
	
	      if(result[key] instanceof Array) //current var is an array just push another to it
	        result[key].push(value)
	      else{ //duplicate var, then it must store as an array
	        result[key] = [result[key]]
	        result[key].push(value)
	      }
	    }
	  })
	
	  return result;
	
	}
	  
	  
	  
	  $('#change-token-lnk').live( "click", function() {
	    $('#api_selector').show();
	    $('#token-set').hide();
	    $('.swagger-section #header').css('background-color', '#CD0000')
	  });
	  
	  $('#set-token-btn').live( "click", function() {
	    var url = replaceParam('apiKey', $('#input_apiKey').val());
	     window.location.href = url;
	     
	    the_token = $('#input_apiKey').val();
	    $('#token-set').show();
	    $('#token-set-token').html(the_token);
	    $('#input_apiKey').trigger('change')
	    $('#api_selector').hide();
	    $('.swagger-section #header').css('background-color', '#20B600')
	  });
	  
	  $('pre').live( "mouseover", function() {
	    if ($(this).find('.toggle-height').length == 0) {
	    	tog = $('.toggle-height');
	    	tog.clone().prependTo($(this));
	    }
	  });
	  
	  $('.toggle-height').live( "click", function() {
	    
	    pn = $(this).parent('pre')
	    if (pn.css('max-height') == 'none') {
	      pn.data('big-height', pn.css('height'))
	      pn.css('height', pn.data('small-height'));
	      pn.css('max-height', pn.data('small-height'));
	    }else {
	      pn.data('small-height', pn.css('max-height'))
	      pn.css('max-height', 'none');
	      pn.css('height', pn.data('big-height'));
	    }
	  });
	  
	  
	  
  


	
		
		
	  var options = $("html").data('swagger-options');

    window.swaggerUi = new SwaggerUi({
      url: options.app_url + options.url,
      dom_id:"swagger-ui-container",
      supportHeaderParams: true,
      supportedSubmitMethods: ['get', 'post', 'put', 'delete'],
      onComplete: function(swaggerApi, swaggerUi){
        if('console' in window) {
          console.log("Loaded SwaggerUI")
          console.log(swaggerApi);
          console.log(swaggerUi);
        }
        $('pre code').each(function(i, e) {hljs.highlightBlock(e)});
      },
      onFailure: function(data) {
        if('console' in window) {
          console.log("Unable to Load SwaggerUI");
          console.log(data);
        }
      },
      docExpansion: "none"
    });

    $('#input_apiKey').change(function() {
      var key = $('#input_apiKey')[0].value;

      if(key && key.trim() != "") {
        if (options.api_auth == 'basic') {
          key = "Basic " + Base64.encode(key);
        } else if (options.api_auth == 'bearer') {
          key = "Bearer " + key
        }
        window.authorizations.add("key", new ApiKeyAuthorization(options.api_key_name, key, options.api_key_type));
      } else {
        window.authorizations.add("key", null);
      }
     
    });
    
    the_token = getUrlParameter('apiKey');
	  
	  if (the_token) {
	    $('#token-set').show();
	    $('#token-set-token').html(the_token);
	    $('#api_selector').hide();
	    $('#input_apiKey').val("");
	    $('#input_apiKey').trigger('change')
	    $('#input_apiKey').val(the_token);
	    $('#input_apiKey').trigger('change')
	    $('.swagger-section #header').css('background-color', '#20B600')
	  }else {
	    $('#api_selector').show();
	    $('#token-set').hide();
	    $('.swagger-section #header').css('background-color', '#CD0000')
	  }

    <% GrapeSwaggerRails.options.headers.each_pair do |key, value| %>
      <%=raw "window.authorizations.add('key', new ApiKeyAuthorization('#{CGI.escapeHTML(key)}', '#{CGI.escapeHTML(value)}', 'header'));" %>
    <% end %>

    window.swaggerUi.load();
  });
  </script>
</head>

<body class="swagger-section">
<div id='header'>
  <div class="swagger-ui-wrap">
    <a id="logo" href="<%= GrapeSwaggerRails.options.app_url %>"><%= GrapeSwaggerRails.options.app_name %></a>

    <form id='api_selector'>
      <div class='input'><input placeholder="Token" id="input_apiKey" name="apiKey" type="text"/></div>
      <div class='input'><button id="set-token-btn">Set token</button></div>
    </form>
    
    <div id='token-set' style="float:right;margin-top: 7px;">
    	<span style="font-size: small;">Using token: </span>
    	<span id='token-set-token' style="font-weight:bold;"></span>
    	<a href="#" id='change-token-lnk' style="font-size: small;"> Change</a>
    </div>
  </div>
</div>

<div id="message-bar" class="swagger-ui-wrap">
  &nbsp;
</div>

<div id="swagger-ui-container" class="swagger-ui-wrap">

</div>

<div class="toggle-height" style="
    background-color: rgb(228, 228, 228);
float: right;
color: white;
padding: 10px;
">toggle height</div>

</body>

</html>
